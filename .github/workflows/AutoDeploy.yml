name: Auto Deploy

on: [push]

jobs:
  build:
    env:
      REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      REPO_NAME: ${{ github.REPOSITORY }}
      REPO_URL: ${{ github.EVENT.REPOSITORY.CLONE_URL }}
      REPO_OWNER: ${{ github.EVENT.REPOSITORY.OWNER.NAME }}
      REPO_BRANCH: "gh-pages"
      REPO_LOCAL_DIR: ".deploy"
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v2
    - name: Dump GitHub context
      env:
        GITHUB_CONTEXT: ${{ toJson(github) }}
      run: echo "$GITHUB_CONTEXT"
    - name: Dump job context
      env:
        JOB_CONTEXT: ${{ toJson(job) }}
      run: echo "$JOB_CONTEXT"
    - name: Environment variables used
      run: |
        echo "REPO_TOKEN: $REPO_TOKEN"
        echo "REPO_NAME: $REPO_NAME"
        echo "REPO_BRANCH: $REPO_BRANCH"
        echo "REPO_URL: $REPO_URL"
        echo "REPO_LOCAL_DIR: $REPO_LOCAL_DIR"
    - name: Create or clone static content branch
      run: |
        GH_PAGES_EXISTS=$(git ls-remote --heads ${REPO_URL} ${REPO_BRANCH} | wc -l)
        echo "GH_PAGES_EXISTS: $GH_PAGES_EXISTS"
        if [ "$GH_PAGES_EXISTS" == 1 ]; then
          echo "Cloning existent $REPO_BRANCH branch"
          git clone --single-branch --branch ${REPO_BRANCH} ${REPO_URL} ${REPO_LOCAL_DIR}
          cd ${REPO_LOCAL_DIR}
          git config user.email "ndioses@gmail.com"
          git config user.name ${REPO_OWNER}
          git remote set-url origin https://${REPO_OWNER}:${REPO_TOKEN}@github.com/${REPO_NAME}.git
          echo "one line inserted" > README.md
          git add .
          git commit -m 'action: autodeploy'
          git push
        else
          echo "Initializing and pushing to a new $REPO_BRANCH branch"
        fi